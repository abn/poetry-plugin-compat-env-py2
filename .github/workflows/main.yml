name: Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'

concurrency:
  group: tests-${{ github.head_ref || github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  tests:
    name: Plugin Tests / ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get full Python version
        id: full-python-version
        run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

      - name: Bootstrap poetry
        run: python -m pip install git+https://github.com/python-poetry/poetry.git@master

      - name: Configure poetry
        run: poetry config virtualenvs.in-project true

      - name: Set up cache
        uses: actions/cache@v2
        id: cache
        with:
          path: .venv
          key: venv-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Ensure cache is healthy
        if: steps.cache.outputs.cache-hit == 'true'
        run: timeout 10s poetry run pip --version || rm -rf .venv

      - name: Install dependencies
        run: poetry install

      - name: Install pytest plugin
        run: poetry run pip install pytest-github-actions-annotate-failures

      - name: Run pytest
        run: poetry run python -m pytest -p no:sugar -q tests/

      - name: Install Plugin
        run: |
          python -m pip install .
          poetry plugin show | grep poetry-plugin-compat-env-py2

      - name: Verify Project Creation
        run: |
          poetry new default-project
          cd default-project
          poetry add -vvv pycowsay

      - name: Set up Python 2.7
        uses: actions/setup-python@v2
        with:
          python-version: 2.7

      - name: Verify Project Creation (Python 2.7)
        run: |
          poetry new legacy-project
          cd legacy-project
          sed -i s/'^python =.*$'/'python = "^2.7"'/ pyproject.toml
          poetry install
          poetry run python --version 2>&1 | grep "Python 2.7"
          poetry add -vvv six
